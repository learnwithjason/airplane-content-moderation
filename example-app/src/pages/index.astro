---
import { loadApprovedComments, checkAndSaveComment } from '../util/airplane';

export const prerender = false;

let message;
let isFlagged;

if (Astro.request.method === 'POST') {
	const data = await Astro.request.formData();
	const comment = String(data.get('comment'));

	const output = await checkAndSaveComment(comment);

	message = output.message;
	isFlagged = output.isFlagged;
}

const comments = await loadApprovedComments();
---

<html lang="en">
	<head>
		<meta charset="utf-8" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="viewport" content="width=device-width" />
		<meta name="generator" content={Astro.generator} />
		<title>Has a fried chicken sandwich ever made you cry?</title>
	</head>
	<body>
		<article class="post">
			<h1>Has a fried chicken sandwich ever made you cry?</h1>
			<p>
				I used to be scared to make fried chicken myself. I figured it was too
				hard and too messy.
			</p>
			<p>
				But then I saw <a href="https://youtu.be/n5nKYqvu29w"
					>this video from Kenji Lopez-Alt</a
				> and realized that maybe it was possible after all.
			</p>
			<p>
				So I put a shitload of chicken thighs into a buttermilk brine, called a
				dozen or so of my closest friends, and took a crack at making fried
				chicken sandwiches.
			</p>
			<p>
				Y'all. No joke, these were the best fried chicken sandwiches I've ever
				had.
			</p>
			<figure>
				<img
					src="https://res.cloudinary.com/jlengstorf/image/upload/w_1600,h_900,f_auto,q_auto,c_fill,g_auto/v1688061879/lwj/demo/chicken-sandwich.jpg"
					alt="a fried chicken sandwich"
					width="1600"
					height="900"
				/>
				<figcaption>
					A fried chicken sandwich so good that people still text me about it.
				</figcaption>
			</figure>
			<p>
				If you're ever in a position to eat one of my fried chicken sandwiches,
				don't miss out.
			</p>
			<p>
				If there's a moral in here somewhere, it's that cooking is fun and fried
				chicken is delicious and you shouldn't be intimidated by cooking
				something new. Oh, and also use MSG in place of about a third of the
				salt in the recipe.
			</p>
		</article>
		<section class="comments">
			{
				message ? (
					<p
						class:list={{
							'comment-posted-message': true,
							flagged: isFlagged,
							success: !isFlagged,
						}}
					>
						{message} <a href="/">(reset form)</a>
					</p>
				) : (
					<>
						<h2>Leave a comment</h2>
						<form method="post" class="add-comment">
							<label>
								Write your comment here
								<textarea name="comment" />
							</label>

							<button type="submit">Submit</button>
						</form>
					</>
				)
			}

			{
				comments.length > 0 ? (
					<>
						<h3>Comments</h3>
						<ul class="approved-comments">
							{comments.map(({ comment }: { comment: string }) => {
								return <li class="comment">{comment}</li>;
							})}
						</ul>
					</>
				) : null
			}
		</section>

		<footer>
			<p>a <a href="https://lwj.dev">Learn With Jason</a> project</p>
			<nav>
				<a href="https://github.com/learnwithjason/airplane-content-moderation/"
					>source code</a
				> Â·
				<a href="https://lwj.dev/blog/comment-moderation-ai-airplane"
					>learn how to build this</a
				>
			</nav>
		</footer>
	</body>
</html>

<script>
	const form = document.querySelector('.add-comment');

	form?.addEventListener('submit', () => {
		const button = form.querySelector('button');
		if (!button) {
			return;
		}

		button.textContent = 'Checking for pottymouth...';
		button.disabled = true;
	});
</script>

<style>
	* {
		margin: 0;
		box-sizing: border-box;
	}

	html,
	body {
		color: hsl(240deg 10% 20% / 1);
		font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto,
			Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji',
			'Segoe UI Symbol';
		font-size: 16px;
		line-height: 1.45;
		margin: 0;
		padding: 0;
	}

	:is(h1, h2, h3) {
		color: hsl(240deg 10% 10% / 1);
		line-height: 1.1;
		margin: 3rem 0 1rem;
	}

	h1 {
		font-size: clamp(1.5rem, 4vw, 2.375rem);
		font-weight: 900;
		text-transform: uppercase;
	}

	@media (min-width: 680px) {
		h1 {
			margin-inline: -5vw;
		}
	}

	:is(.post, .comments, footer) {
		margin: 4rem auto;
		width: min(90vw, 550px);
	}

	figure {
		margin: 2rem -5vw;
	}

	figure img {
		aspect-ratio: 16 / 9;
		display: block;
		height: auto;
		margin-block-end: 0.5rem;
		max-width: 100%;
	}

	figcaption {
		color: hsl(240deg 10% 50% / 1);
		font-size: 0.875rem;
		font-style: italic;
		margin-inline: 5vw;
	}

	p {
		margin-top: 1.5rem;
	}

	.comment-posted-message {
		border: 1px solid;
		padding: 1rem;
	}

	.comment-posted-message.success {
		background: rgba(0 255 0 / 0.1);
		border-color: rgba(0 255 0 / 1);
		color: rgba(0 100 0 / 1);
	}

	.comment-posted-message.flagged {
		background: rgba(255 0 0 / 0.1);
		border-color: rgba(255 0 0 / 1);
		color: rgba(100 0 0 / 1);
	}

	.add-comment :is(label, textarea, button) {
		display: block;
	}

	.add-comment textarea {
		font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto,
			Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji',
			'Segoe UI Symbol';
		font-size: 1rem;
		height: 4rem;
		line-height: 1.45;
		margin-block: 0.5rem;
		padding: 0.25rem 0.5rem;
		width: 100%;
	}

	.add-comment button {
		font-size: 1.25rem;
		padding: 0.5rem 1rem;
	}

	.approved-comments {
		display: block;
		list-style: none;
		margin: 1rem 0 0;
		padding: 0;
	}

	.comment {
		background: hsl(240deg 10% 98% / 1);
		border: 1px solid hsl(240deg 90% 90% / 1);
		border-radius: 0.25rem;
		display: block;
		margin: 1rem 0 0;
		padding: 1rem;
	}

	footer {
		color: hsl(240deg 10% 50% / 1);
		display: flex;
		font-size: 0.875rem;
		justify-content: space-between;
	}

	footer :is(p, nav) {
		margin: 0;
	}

	footer a {
		color: inherit;
	}
</style>
